basePath: /
definitions:
  handlers.RefreshRequest:
    properties:
      refresh_token:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      details: {}
      message:
        type: string
    type: object
  response.PageResp:
    properties:
      data:
        items:
          $ref: '#/definitions/user.Usuario'
        type: array
      limite:
        type: integer
      pagina:
        type: integer
      total:
        type: integer
    type: object
  user.LoginDTO:
    properties:
      login:
        type: string
      senha:
        type: string
    type: object
  user.Permissao:
    enum:
    - DEV
    - ADM
    - USR
    - TEC
    type: string
    x-enum-varnames:
    - PermDEV
    - PermADM
    - PermUSR
    - PermTEC
  user.TokenPair:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  user.Usuario:
    properties:
      atualizadoEm:
        type: string
      avatar:
        type: string
      criadoEm:
        type: string
      email:
        type: string
      id:
        type: string
      login:
        type: string
      nome:
        type: string
      permissao:
        $ref: '#/definitions/user.Permissao'
      status:
        type: boolean
      ultimoLogin:
        type: string
    type: object
  user.UsuarioResponse:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: string
      login:
        type: string
      nome:
        type: string
      permissao:
        $ref: '#/definitions/user.Permissao'
      status:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: API para gestão de chamados
  title: Gestor de Chamados API
  version: "1.0"
paths:
  /eu:
    get:
      consumes:
      - application/json
      description: Retorna os dados do usuário autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UsuarioResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Retorna usuário autenticado
      tags:
      - auth
  /login:
    post:
      consumes:
      - application/json
      description: Autentica usuário e retorna JWT
      parameters:
      - description: Credenciais
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.TokenPair'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Realiza login
      tags:
      - auth
  /refresh:
    post:
      consumes:
      - application/json
      description: Valida refresh token e retorna novo par de tokens JWT
      parameters:
      - description: Refresh Token
        in: body
        name: refresh_token
        required: true
        schema:
          $ref: '#/definitions/handlers.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.TokenPair'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Realiza refresh
      tags:
      - auth
  /usuarios/atualizar/{id}:
    patch:
      consumes:
      - application/json
      description: Atualiza dados do usuário (ADM/TEC/USR conforme regra)
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: string
      - description: Dados do usuário
        in: body
        name: usuario
        required: true
        schema:
          $ref: '#/definitions/user.Usuario'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Atualiza usuário
      tags:
      - usuarios
  /usuarios/autorizar/{id}:
    patch:
      consumes:
      - application/json
      description: Autoriza (reativa) usuário pelo ID (apenas ADM)
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Autoriza usuário
      tags:
      - usuarios
  /usuarios/buscar-novo/{login}:
    get:
      consumes:
      - application/json
      description: Busca usuário no LDAP e retorna dados (apenas ADM)
      parameters:
      - description: Login do usuário
        in: path
        name: login
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Busca usuário novo no LDAP
      tags:
      - usuarios
  /usuarios/buscar-por-id/{id}:
    get:
      consumes:
      - application/json
      description: Retorna usuário pelo ID (apenas ADM)
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Usuario'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Busca usuário por ID
      tags:
      - usuarios
  /usuarios/buscar-tecnicos:
    get:
      consumes:
      - application/json
      description: Retorna lista de técnicos (apenas ADM)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                type: string
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Lista técnicos
      tags:
      - usuarios
  /usuarios/buscar-tudo:
    get:
      consumes:
      - application/json
      description: Retorna lista paginada de usuários (apenas ADM)
      parameters:
      - description: Página
        in: query
        name: pagina
        type: integer
      - description: Limite
        in: query
        name: limite
        type: integer
      - description: Busca
        in: query
        name: busca
        type: string
      - description: Status
        in: query
        name: status
        type: string
      - description: Permissão
        in: query
        name: permissao
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PageResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Lista usuários com paginação e filtros
      tags:
      - usuarios
  /usuarios/criar:
    post:
      consumes:
      - application/json
      description: Cria um usuário no sistema (apenas ADM)
      parameters:
      - description: Dados do usuário
        in: body
        name: usuario
        required: true
        schema:
          $ref: '#/definitions/user.Usuario'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.Usuario'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Cria um novo usuário
      tags:
      - usuarios
  /usuarios/desativar/{id}:
    delete:
      consumes:
      - application/json
      description: Desativa (soft delete) usuário pelo ID (apenas ADM)
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Desativa usuário
      tags:
      - usuarios
  /usuarios/lista-completa:
    get:
      consumes:
      - application/json
      description: Retorna todos os usuários (apenas ADM)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.Usuario'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Lista completa de usuários
      tags:
      - usuarios
  /usuarios/valida-usuario:
    get:
      consumes:
      - application/json
      description: Verifica se o usuário está autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Valida usuário autenticado
      tags:
      - usuarios
swagger: "2.0"
